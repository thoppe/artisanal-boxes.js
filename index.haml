<!doctype html>
<html>
<head>
<meta charset="utf-8"/>

<link rel="stylesheet" type="text/css" href="css/main.css">

<link rel="stylesheet" type="text/css" href="artisanal-boxes-default.css">
<script src="js/jquery-2.1.0.min.js"></script>
<script src="js/numeric-1.2.6.min.js"></script>
<script src="artisanal-boxes.js"></script>

</head>
.contents

  .drawbox.logo
    = Haml::Engine.new(File.read('logo.haml')).render

  <br><br>
  %h1 What is it?

  Artinsanal boxes is a javascript library that carefully crafts 
  a series of nested divs into a tightly knit arrangement. 
  These boxes are completely organic and fluidly respond to window resizes. 
  They begin with class of <code>drawbox</code> and nest with <code>hbox</code>
  and <code>vbox</code>'s. Let's see an example with a little piece of HAML:

  %pre.code.inset
    = File.read('example.haml')

  We get

  .drawbox.inset
    = Haml::Engine.new(File.read('example.haml')).render

  Hate HAML? That's OK, just check out the <a target="_blank" href="view-source:http://thoppe.github.io/artisanal-boxes.js/">source</a> of this page to see how it's
  done with pure HTML.

  %h1 How does it work?

  First we measure the aspect ratio for each end node of the nested structure. The boxes respect the bounding box of the font, hence changing line-height will give a tighter fit at the expense of overlapping descenders. Once the aspect ratio of the text (and any images) have been measured the unique layout is calculated and applied using transform-scale.
  
  %h1 Is it fast?

  Sorry son, in time you'll realize that good things are worth the wait.
  The calculations to fit the boxes requires solving a linear system whose
  size is proportional to each box <em>and</em> parent box. The calculation
  is all done client-side and must be redone for any window resize. In practice,
  this may add tenths of microseconds onto load times. 

  %h1 Is it beautiful?

  Yes.
   

</html>
